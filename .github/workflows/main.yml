name: linting, testing, building
on:
  workflow_dispatch
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]
jobs:
  npm-cache:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: node: [ 14, 16, 18 ]
    steps: 
      - name: Checkout Commit
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Cache npm deps
        uses: actions/cache@v3
        id: cache-deps
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install deps
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: npm ci

  linting:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: node: [ 14, 16, 18 ]
    needs: npm-cache
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Restore npm deps
        uses: actions/cache@v3
        id: cache-deps
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: linting ts
        run: npm run lint:ts
      - name: linting scss
        run: npm run lint:scss

  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: node: [ 14, 16, 18 ]
    needs: npm-cache
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Restore npm deps
        uses: actions/cache@v3
        id: cache-deps
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: unit testing
        run: npm run test:unit

  # screenshot-test:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [ 17.x ]
  #   steps:
  #     - name: Checkout Commit
  #       uses: actions/checkout@v3
  #     - name: Use Node.js ${{ matrix.node }}
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: ${{ matrix.node }}
  #     - name: Cache
  #       uses: actions/cache@v3
  #       with:
  #         path: '**/node_modules'
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #     - name: Install npm
  #       if: steps.npm-cache.outputs.cache-hit != 'true'
  #       run: npm ci
  #     - name: build storybook
  #       if: always()
  #       run: npm run storybook:build
  #     - name: screenshot testing
  #       if: always()
  #       run: npm run test:ui:ci

  # build:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [ 17.x ]
  #   needs: [screenshot-test, linting, unit-test]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Staring Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #     - name: Cache
  #       uses: actions/cache@v3
  #       with:
  #         path: '**/node_modules'
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #     - name: Install npm
  #       if: steps.npm-cache.outputs.cache-hit != 'true'
  #       run: npm ci
  #     - name: build production project
  #       run: npm run build:prod
